generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  //
  email     String   @unique
  password  String
  //
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  //
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  //
  roles     Role[]
  Token     Token[]

  @@map("users")
}

model Token {
  id        String   @id @default(cuid())
  //
  token     String   @unique
  //
  userAgent String   @map("user_agent")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  //
  expiredAt DateTime @map("expired_at")

  @@map("tokens")
}

model Post {
  id         String    @id @default(cuid())
  //
  title      String
  content    String
  //
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  //
  categoryId String?   @map("category_id")
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("posts")
}

model Category {
  id    String @id @default(cuid())
  //
  title String
  //
  Posts Post[]

  @@map("categories")
}

model Athlete {
  id          String   @id @default(cuid())
  //
  firstName   String   @map("first_name")
  lastName    String   @map("last_name")
  middleName  String   @map("middle_name")
  //
  bio         String
  //
  dateOfBirth DateTime @map("date_of_birth")
  //
  subjectId   String?  @map("subject_id")
  Subject     Subject? @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  //
  trainerId   String?  @map("trainer_id")
  Trainer     Trainer? @relation(fields: [trainerId], references: [id], onDelete: Cascade)

  @@map("athletes")
}

model Trainer {
  id          String    @id @default(cuid())
  //
  firstName   String    @map("first_name")
  lastName    String    @map("last_name")
  middleName  String    @map("middle_name")
  //
  bio         String
  //
  dateOfBirth DateTime  @map("date_of_birth")
  //
  atletes     Athlete[]
  //
  subjectId   String?   @map("subject_id")
  subject     Subject?  @relation(fields: [subjectId], references: [id], onDelete: Cascade)

  @@map("trainers")
}

model Subject {
  id       String    @id @default(cuid())
  //
  title    String
  //
  athletes Athlete[]
  trainers Trainer[]

  @@map("subjects")
}
